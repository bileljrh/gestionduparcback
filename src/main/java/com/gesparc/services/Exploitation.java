package com.gesparc.services;


import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.stereotype.Service;

import com.gesparc.entities.exploitation.DocumentSinistreEntity;
import com.gesparc.security.entity.UserEntity;
import com.gesparc.sharedDTO.administratif.Additionnel.SelectVehiculeDTO;
import com.gesparc.sharedDTO.exploitation.DocumentSinistreDTO;
import com.gesparc.sharedDTO.exploitation.SinistreVehiculeDTO;
import com.gesparc.sharedDTO.exploitation.additionnel.*;

import java.text.ParseException;
import java.time.LocalDate;
import java.util.List;

@EnableAutoConfiguration
@Service
public interface Exploitation {

    List<SelectVehiculeDTO> getSelectVehiculeByStrucutureForReservation(UserEntity userEntity);

    void addNewDemandeReservationVehicule(ReservationVehiculeTableDataDTO reservationVehiculeTableDataDTO);

    List<ReservationVehiculeTableDataDTO> getPaginationListReservationVehiculeBySelectedStatus(String status, int page, int limit) throws ParseException;

    Long getTotalNumberListReservationVehiculeBySelectedStatus(String status, int page, int limit) throws ParseException;

    void deleteSelectedReservationVehicule(Long id);

    void confirmSelectedReservationVehicule(Long id);

    void addNewLocationVehicule(NewLocationVehiculeDTO newLocationVehiculeDTO);

    void modifySelectedLocationVehicule(NewLocationVehiculeDTO newLocationVehiculeDTO);

    void deleteSelectedLocationVehicule(Long id);

    List<LocationVehiculeTableDataDTO> getPaginationLocationVehiculeList(UserEntity userEntity, LocalDate dateMin, LocalDate dateMax, int page, int limit);

    Long getTotalNumberLocationVehiculeList(UserEntity userEntity, LocalDate dateMin, LocalDate dateMax);

    List<SelectVehiculeDTO> getSelectVehiculeByStrucutureForSinistre(UserEntity userEntity);

    void addNewSinistreVehicule(NewSinistreVehiculeDTO newSinistreVehiculeDTO);

    void modifySelectedSinistreVehicule(NewSinistreVehiculeDTO newSinistreVehiculeDTO);

    List<SinistreVehiculeTableDataDTO> getPaginationListSinistreVehicule(String etat, int annee, int page, int limit);

    Long getTotalNumberListSinistreVehicule(String etat, int annee);

    void modifySelectedSinistreVehicule(SinistreVehiculeDTO sinistreVehiculeDTO);

    void deleteSelectedDocumentSinistreVehicule(Long id);

    DocumentSinistreEntity uploadNewDocumentSinistreVehicule(Long id, DocumentSinistreDTO documentSinistreDTO);

    String getByteDocumentSinistre(Long id);

    List<SelectVehiculeDTO> getSelectVehiculeByStrucutureForEmprunt(UserEntity userEntity);

    void addNewEmpruntVehicule(NewEmpruntVehiculeDTO newEmpruntVehiculeDTO);

    List<EmpruntVehiculeTableDataDTO> getPaginationListEmpruntVehiculeBySelectedStatusAndYear(String etat, String annee, int page, int limit) throws ParseException;

    Long getTotalItemListEmpruntVehiculeBySelectedStatusAndYear(String etat, String annee, int page, int limit) throws ParseException;

    void confirmSelectedEmpruntVehicule(Long id);

    List<ListBeneficiaireStructureDTO> getListBeneficiaireStructureResponse();

    void deleteSelectedSinistreVehicule(Long id);

    void modifySelectedDemandeReservationVehicule(ReservationVehiculeTableDataDTO reservationVehiculeTableDataDTO);

    void deleteSelectedEmpruntVehicule(Long id);

    void modifySelectedEmpruntVehicule(NewEmpruntVehiculeDTO newEmpruntVehiculeDTO);
    
    List<DocumentSinistreEntity> loadAllDocumentSinistres(Long id);
    
    String onChangeUGPlocation (Long id);  
}
